[versions]
# Platform
gradle = "8.9"
kotlin = "1.9.23"

argparse4j = "0.9.0"
avro = "1.11.4"
avroGenerator = "1.9.1"
confluent = "7.6.0" # Keep in sync with 'kafka' version.
jackson = "2.16.1"
jakartaValidation = "3.0.2"
junit = "5.9.3"
kafka = "7.6.0-ce" # Keep in sync with 'confluent' version.
ktor = "2.3.4"
log4j2="2.20.0"
okHttp = "4.12.0"
radarCommons = "1.1.3"
radarJersey = "0.11.1"

[libraries]
# For buildSrc project
gradle-radar-kotlin = { group = "org.radarbase.radar-kotlin", name = "org.radarbase.radar-kotlin.gradle.plugin", version.ref = "radarCommons" }
gradle-radar-publishing = { group = "org.radarbase.radar-publishing", name = "org.radarbase.radar-publishing.gradle.plugin", version.ref = "radarCommons" }

argparse4j = { group = "net.sourceforge.argparse4j", name = "argparse4j", version.ref = "argparse4j" }
avro = { group = "org.apache.avro", name = "avro", version.ref = "avro" }
connect-json = { group = "org.apache.kafka", name = "connect-json", version.ref = "kafka" }
jackson-bom = { group = "com.fasterxml.jackson", name = "jackson-bom", version.ref = "jackson" }
jackson-core = { group = "com.fasterxml.jackson.core", name = "jackson-core", version.ref = "jackson" }
jackson-databind = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jakarta-validation-api = { group = "jakarta.validation", name = "jakarta.validation-api", version.ref = "jakartaValidation" }
kafka-connect-api = { group = "org.apache.kafka", name = "connect-api", version.ref = "kafka" }
kafka-connect-avro-converter = { group = "io.confluent", name = "kafka-connect-avro-converter", version.ref = "confluent" }
kafka-connect-avro-data = { group = "io.confluent", name = "kafka-connect-avro-data", version.ref = "confluent" }
kafka-schema-registry-client = { group = "io.confluent", name = "kafka-schema-registry-client", version.ref = "confluent" }
ktor-client-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
log4j2-core = { group = "org.apache.logging.log4j", name = "log4j-core", version.ref = "log4j2" }
mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "okHttp" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okHttp" }
radar-commons = { group = "org.radarbase", name = "radar-commons", version.ref = "radarCommons" }
radar-commons-kotlin = { group = "org.radarbase", name = "radar-commons-kotlin", version.ref = "radarCommons" }
radar-commons-server = { group = "org.radarbase", name = "radar-commons-server", version.ref = "radarCommons" }
radar-jersey = { group = "org.radarbase", name = "radar-jersey", version.ref = "radarJersey" }

[plugins]
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
davidmc24-avro-base = { id = "com.github.davidmc24.gradle.plugin.avro-base", version.ref = "avroGenerator" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
