plugins {
    id 'java-library'
}

compileJava {
    targetCompatibility = JavaVersion.VERSION_11
    sourceCompatibility = JavaVersion.VERSION_11
}

description = 'RADAR Schemas core specification and validation tools.'

configurations {
    implementation {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    runtimeOnly {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
}

dependencies {
    api (group: 'org.apache.avro', name: 'avro', version: avroVersion) {
        exclude group: 'org.xerial.snappy', module: 'snappy-java'
        exclude group: 'com.thoughtworks.paranamer', module: 'paranamer'
        exclude group: 'org.apache.commons', module: 'commons-compress'
        exclude group: 'org.tukaani', module: 'xz'
    }
    api group: 'javax.validation', name: 'validation-api', version: javaxValidationVersion
    api project(':radar-schemas-commons')

    api(platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion"))
    api("com.fasterxml.jackson.core:jackson-databind")

    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml")
    implementation(group: 'io.confluent', name: 'kafka-connect-avro-data', version: confluentVersion) {
        exclude group: "org.glassfish.jersey.core", module: "jersey-common"
        exclude group: "jakarta.ws.rs", module: "jakarta.ws.rs-api"
        exclude group: "io.swagger", module: "swagger-annotations"
        exclude group: "io.confluent", module: "common-utils"
        exclude group: "io.confluent", module: "kafka-schema-serializer"
    }


    implementation(group: 'org.apache.kafka', name: 'connect-api', version: kafkaVersion) {
        exclude group: "org.apache.kafka", module: "kafka-clients"
        exclude group: "javax.ws.rs", module: "javax.ws.rs-api"
    }

    api group: 'org.radarbase', name: 'radar-commons-server', version: radarCommonsVersion

    testImplementation group: 'junit', name: 'junit', version: junitVersion
    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
}

if (!project.hasProperty("profile") || project.property("profile") != "docker") {
    apply from: "$rootDir/gradle/publishing.gradle"
    apply from: "$rootDir/gradle/testing.gradle"
}
