plugins {
    id 'java-library'
}

compileJava {
    targetCompatibility = JavaVersion.VERSION_11
    sourceCompatibility = JavaVersion.VERSION_11
}

configurations {
    implementation {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    runtimeOnly {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
}

description = 'RADAR Schemas specification and validation tools.'

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    api project(':radar-schemas-commons')
    api project(':radar-schemas-core')
    api group: 'com.squareup.okhttp3', name: 'okhttp', version: okHttpVersion
    api group: 'org.radarbase', name: 'radar-commons-server', version: radarCommonsVersion

    implementation platform("io.netty:netty-bom:4.1.79.Final")
    implementation platform("org.eclipse.jetty:jetty-bom:9.4.48.v20220622")

    implementation group: 'io.confluent', name: 'kafka-connect-avro-converter', version: confluentVersion
    implementation(group: 'io.confluent', name: 'kafka-schema-registry', version: confluentVersion) {
        exclude(group: "org.slf4j", module: "slf4j-reload4j")
    }
    implementation group: 'org.apache.kafka', name: 'connect-json', version: kafkaVersion

    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion

    testImplementation group: 'junit', name: 'junit', version: junitVersion
}

//---------------------------------------------------------------------------//
// Publishing                                                                //
//---------------------------------------------------------------------------//

tasks.withType(Tar) {
    compression = Compression.GZIP
    archiveExtension.set('tar.gz')
}

if (!project.hasProperty("profile") || project.property("profile") != "docker") {
    apply from: "$rootDir/gradle/publishing.gradle"
    apply from: "$rootDir/gradle/testing.gradle"
}
